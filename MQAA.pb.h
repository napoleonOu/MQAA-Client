// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MQAA.proto

#ifndef PROTOBUF_MQAA_2eproto__INCLUDED
#define PROTOBUF_MQAA_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace ec {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_MQAA_2eproto();
void protobuf_AssignDesc_MQAA_2eproto();
void protobuf_ShutdownFile_MQAA_2eproto();

class LoginRequest;
class LoginResponse;
class Request;
class Response;
class MQAAMessage;

enum MSG {
  Login_Request = 10001,
  Login_Response = 10002,
  Logout_Request = 10003,
  Logout_Response = 10004
};
bool MSG_IsValid(int value);
const MSG MSG_MIN = Login_Request;
const MSG MSG_MAX = Logout_Response;
const int MSG_ARRAYSIZE = MSG_MAX + 1;

const ::google::protobuf::EnumDescriptor* MSG_descriptor();
inline const ::std::string& MSG_Name(MSG value) {
  return ::google::protobuf::internal::NameOfEnum(
    MSG_descriptor(), value);
}
inline bool MSG_Parse(
    const ::std::string& name, MSG* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MSG>(
    MSG_descriptor(), name, value);
}
// ===================================================================

class LoginRequest : public ::google::protobuf::Message {
 public:
  LoginRequest();
  virtual ~LoginRequest();

  LoginRequest(const LoginRequest& from);

  inline LoginRequest& operator=(const LoginRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginRequest& default_instance();

  void Swap(LoginRequest* other);

  // implements Message ----------------------------------------------

  inline LoginRequest* New() const { return New(NULL); }

  LoginRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoginRequest& from);
  void MergeFrom(const LoginRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LoginRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes username = 1;
  bool has_username() const;
  void clear_username();
  static const int kUsernameFieldNumber = 1;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  void set_username(const char* value);
  void set_username(const void* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // optional string password = 2;
  bool has_password() const;
  void clear_password();
  static const int kPasswordFieldNumber = 2;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // @@protoc_insertion_point(class_scope:ec.LoginRequest)
 private:
  inline void set_has_username();
  inline void clear_has_username();
  inline void set_has_password();
  inline void clear_has_password();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  friend void  protobuf_AddDesc_MQAA_2eproto();
  friend void protobuf_AssignDesc_MQAA_2eproto();
  friend void protobuf_ShutdownFile_MQAA_2eproto();

  void InitAsDefaultInstance();
  static LoginRequest* default_instance_;
};
// -------------------------------------------------------------------

class LoginResponse : public ::google::protobuf::Message {
 public:
  LoginResponse();
  virtual ~LoginResponse();

  LoginResponse(const LoginResponse& from);

  inline LoginResponse& operator=(const LoginResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginResponse& default_instance();

  void Swap(LoginResponse* other);

  // implements Message ----------------------------------------------

  inline LoginResponse* New() const { return New(NULL); }

  LoginResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoginResponse& from);
  void MergeFrom(const LoginResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LoginResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required fixed32 ttl = 1;
  bool has_ttl() const;
  void clear_ttl();
  static const int kTtlFieldNumber = 1;
  ::google::protobuf::uint32 ttl() const;
  void set_ttl(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ec.LoginResponse)
 private:
  inline void set_has_ttl();
  inline void clear_has_ttl();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 ttl_;
  friend void  protobuf_AddDesc_MQAA_2eproto();
  friend void protobuf_AssignDesc_MQAA_2eproto();
  friend void protobuf_ShutdownFile_MQAA_2eproto();

  void InitAsDefaultInstance();
  static LoginResponse* default_instance_;
};
// -------------------------------------------------------------------

class Request : public ::google::protobuf::Message {
 public:
  Request();
  virtual ~Request();

  Request(const Request& from);

  inline Request& operator=(const Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Request& default_instance();

  void Swap(Request* other);

  // implements Message ----------------------------------------------

  inline Request* New() const { return New(NULL); }

  Request* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Request& from);
  void MergeFrom(const Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .ec.LoginRequest login = 1;
  bool has_login() const;
  void clear_login();
  static const int kLoginFieldNumber = 1;
  const ::ec::LoginRequest& login() const;
  ::ec::LoginRequest* mutable_login();
  ::ec::LoginRequest* release_login();
  void set_allocated_login(::ec::LoginRequest* login);

  // @@protoc_insertion_point(class_scope:ec.Request)
 private:
  inline void set_has_login();
  inline void clear_has_login();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ec::LoginRequest* login_;
  friend void  protobuf_AddDesc_MQAA_2eproto();
  friend void protobuf_AssignDesc_MQAA_2eproto();
  friend void protobuf_ShutdownFile_MQAA_2eproto();

  void InitAsDefaultInstance();
  static Request* default_instance_;
};
// -------------------------------------------------------------------

class Response : public ::google::protobuf::Message {
 public:
  Response();
  virtual ~Response();

  Response(const Response& from);

  inline Response& operator=(const Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Response& default_instance();

  void Swap(Response* other);

  // implements Message ----------------------------------------------

  inline Response* New() const { return New(NULL); }

  Response* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Response& from);
  void MergeFrom(const Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  bool result() const;
  void set_result(bool value);

  // required bool last_response = 2;
  bool has_last_response() const;
  void clear_last_response();
  static const int kLastResponseFieldNumber = 2;
  bool last_response() const;
  void set_last_response(bool value);

  // optional bytes error_describe = 3;
  bool has_error_describe() const;
  void clear_error_describe();
  static const int kErrorDescribeFieldNumber = 3;
  const ::std::string& error_describe() const;
  void set_error_describe(const ::std::string& value);
  void set_error_describe(const char* value);
  void set_error_describe(const void* value, size_t size);
  ::std::string* mutable_error_describe();
  ::std::string* release_error_describe();
  void set_allocated_error_describe(::std::string* error_describe);

  // optional .ec.LoginResponse login = 4;
  bool has_login() const;
  void clear_login();
  static const int kLoginFieldNumber = 4;
  const ::ec::LoginResponse& login() const;
  ::ec::LoginResponse* mutable_login();
  ::ec::LoginResponse* release_login();
  void set_allocated_login(::ec::LoginResponse* login);

  // @@protoc_insertion_point(class_scope:ec.Response)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_last_response();
  inline void clear_has_last_response();
  inline void set_has_error_describe();
  inline void clear_has_error_describe();
  inline void set_has_login();
  inline void clear_has_login();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr error_describe_;
  ::ec::LoginResponse* login_;
  bool result_;
  bool last_response_;
  friend void  protobuf_AddDesc_MQAA_2eproto();
  friend void protobuf_AssignDesc_MQAA_2eproto();
  friend void protobuf_ShutdownFile_MQAA_2eproto();

  void InitAsDefaultInstance();
  static Response* default_instance_;
};
// -------------------------------------------------------------------

class MQAAMessage : public ::google::protobuf::Message {
 public:
  MQAAMessage();
  virtual ~MQAAMessage();

  MQAAMessage(const MQAAMessage& from);

  inline MQAAMessage& operator=(const MQAAMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MQAAMessage& default_instance();

  void Swap(MQAAMessage* other);

  // implements Message ----------------------------------------------

  inline MQAAMessage* New() const { return New(NULL); }

  MQAAMessage* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MQAAMessage& from);
  void MergeFrom(const MQAAMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MQAAMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ec.MSG msg_type = 1;
  bool has_msg_type() const;
  void clear_msg_type();
  static const int kMsgTypeFieldNumber = 1;
  ::ec::MSG msg_type() const;
  void set_msg_type(::ec::MSG value);

  // required fixed32 sequence = 2;
  bool has_sequence() const;
  void clear_sequence();
  static const int kSequenceFieldNumber = 2;
  ::google::protobuf::uint32 sequence() const;
  void set_sequence(::google::protobuf::uint32 value);

  // optional fixed32 session_id = 3;
  bool has_session_id() const;
  void clear_session_id();
  static const int kSessionIdFieldNumber = 3;
  ::google::protobuf::uint32 session_id() const;
  void set_session_id(::google::protobuf::uint32 value);

  // optional .ec.Request request = 4;
  bool has_request() const;
  void clear_request();
  static const int kRequestFieldNumber = 4;
  const ::ec::Request& request() const;
  ::ec::Request* mutable_request();
  ::ec::Request* release_request();
  void set_allocated_request(::ec::Request* request);

  // optional .ec.Response response = 5;
  bool has_response() const;
  void clear_response();
  static const int kResponseFieldNumber = 5;
  const ::ec::Response& response() const;
  ::ec::Response* mutable_response();
  ::ec::Response* release_response();
  void set_allocated_response(::ec::Response* response);

  // @@protoc_insertion_point(class_scope:ec.MQAAMessage)
 private:
  inline void set_has_msg_type();
  inline void clear_has_msg_type();
  inline void set_has_sequence();
  inline void clear_has_sequence();
  inline void set_has_session_id();
  inline void clear_has_session_id();
  inline void set_has_request();
  inline void clear_has_request();
  inline void set_has_response();
  inline void clear_has_response();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msg_type_;
  ::google::protobuf::uint32 sequence_;
  ::ec::Request* request_;
  ::ec::Response* response_;
  ::google::protobuf::uint32 session_id_;
  friend void  protobuf_AddDesc_MQAA_2eproto();
  friend void protobuf_AssignDesc_MQAA_2eproto();
  friend void protobuf_ShutdownFile_MQAA_2eproto();

  void InitAsDefaultInstance();
  static MQAAMessage* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// LoginRequest

// required bytes username = 1;
inline bool LoginRequest::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginRequest::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoginRequest::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoginRequest::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
inline const ::std::string& LoginRequest::username() const {
  // @@protoc_insertion_point(field_get:ec.LoginRequest.username)
  return username_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRequest::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ec.LoginRequest.username)
}
inline void LoginRequest::set_username(const char* value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ec.LoginRequest.username)
}
inline void LoginRequest::set_username(const void* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ec.LoginRequest.username)
}
inline ::std::string* LoginRequest::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:ec.LoginRequest.username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginRequest::release_username() {
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRequest::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:ec.LoginRequest.username)
}

// optional string password = 2;
inline bool LoginRequest::has_password() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LoginRequest::set_has_password() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LoginRequest::clear_has_password() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LoginRequest::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_password();
}
inline const ::std::string& LoginRequest::password() const {
  // @@protoc_insertion_point(field_get:ec.LoginRequest.password)
  return password_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRequest::set_password(const ::std::string& value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ec.LoginRequest.password)
}
inline void LoginRequest::set_password(const char* value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ec.LoginRequest.password)
}
inline void LoginRequest::set_password(const char* value, size_t size) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ec.LoginRequest.password)
}
inline ::std::string* LoginRequest::mutable_password() {
  set_has_password();
  // @@protoc_insertion_point(field_mutable:ec.LoginRequest.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginRequest::release_password() {
  clear_has_password();
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRequest::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    set_has_password();
  } else {
    clear_has_password();
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:ec.LoginRequest.password)
}

// -------------------------------------------------------------------

// LoginResponse

// required fixed32 ttl = 1;
inline bool LoginResponse::has_ttl() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginResponse::set_has_ttl() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoginResponse::clear_has_ttl() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoginResponse::clear_ttl() {
  ttl_ = 0u;
  clear_has_ttl();
}
inline ::google::protobuf::uint32 LoginResponse::ttl() const {
  // @@protoc_insertion_point(field_get:ec.LoginResponse.ttl)
  return ttl_;
}
inline void LoginResponse::set_ttl(::google::protobuf::uint32 value) {
  set_has_ttl();
  ttl_ = value;
  // @@protoc_insertion_point(field_set:ec.LoginResponse.ttl)
}

// -------------------------------------------------------------------

// Request

// optional .ec.LoginRequest login = 1;
inline bool Request::has_login() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Request::set_has_login() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Request::clear_has_login() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Request::clear_login() {
  if (login_ != NULL) login_->::ec::LoginRequest::Clear();
  clear_has_login();
}
inline const ::ec::LoginRequest& Request::login() const {
  // @@protoc_insertion_point(field_get:ec.Request.login)
  return login_ != NULL ? *login_ : *default_instance_->login_;
}
inline ::ec::LoginRequest* Request::mutable_login() {
  set_has_login();
  if (login_ == NULL) {
    login_ = new ::ec::LoginRequest;
  }
  // @@protoc_insertion_point(field_mutable:ec.Request.login)
  return login_;
}
inline ::ec::LoginRequest* Request::release_login() {
  clear_has_login();
  ::ec::LoginRequest* temp = login_;
  login_ = NULL;
  return temp;
}
inline void Request::set_allocated_login(::ec::LoginRequest* login) {
  delete login_;
  login_ = login;
  if (login) {
    set_has_login();
  } else {
    clear_has_login();
  }
  // @@protoc_insertion_point(field_set_allocated:ec.Request.login)
}

// -------------------------------------------------------------------

// Response

// required bool result = 1;
inline bool Response::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Response::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Response::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Response::clear_result() {
  result_ = false;
  clear_has_result();
}
inline bool Response::result() const {
  // @@protoc_insertion_point(field_get:ec.Response.result)
  return result_;
}
inline void Response::set_result(bool value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:ec.Response.result)
}

// required bool last_response = 2;
inline bool Response::has_last_response() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Response::set_has_last_response() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Response::clear_has_last_response() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Response::clear_last_response() {
  last_response_ = false;
  clear_has_last_response();
}
inline bool Response::last_response() const {
  // @@protoc_insertion_point(field_get:ec.Response.last_response)
  return last_response_;
}
inline void Response::set_last_response(bool value) {
  set_has_last_response();
  last_response_ = value;
  // @@protoc_insertion_point(field_set:ec.Response.last_response)
}

// optional bytes error_describe = 3;
inline bool Response::has_error_describe() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Response::set_has_error_describe() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Response::clear_has_error_describe() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Response::clear_error_describe() {
  error_describe_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_error_describe();
}
inline const ::std::string& Response::error_describe() const {
  // @@protoc_insertion_point(field_get:ec.Response.error_describe)
  return error_describe_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Response::set_error_describe(const ::std::string& value) {
  set_has_error_describe();
  error_describe_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ec.Response.error_describe)
}
inline void Response::set_error_describe(const char* value) {
  set_has_error_describe();
  error_describe_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ec.Response.error_describe)
}
inline void Response::set_error_describe(const void* value, size_t size) {
  set_has_error_describe();
  error_describe_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ec.Response.error_describe)
}
inline ::std::string* Response::mutable_error_describe() {
  set_has_error_describe();
  // @@protoc_insertion_point(field_mutable:ec.Response.error_describe)
  return error_describe_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Response::release_error_describe() {
  clear_has_error_describe();
  return error_describe_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Response::set_allocated_error_describe(::std::string* error_describe) {
  if (error_describe != NULL) {
    set_has_error_describe();
  } else {
    clear_has_error_describe();
  }
  error_describe_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error_describe);
  // @@protoc_insertion_point(field_set_allocated:ec.Response.error_describe)
}

// optional .ec.LoginResponse login = 4;
inline bool Response::has_login() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Response::set_has_login() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Response::clear_has_login() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Response::clear_login() {
  if (login_ != NULL) login_->::ec::LoginResponse::Clear();
  clear_has_login();
}
inline const ::ec::LoginResponse& Response::login() const {
  // @@protoc_insertion_point(field_get:ec.Response.login)
  return login_ != NULL ? *login_ : *default_instance_->login_;
}
inline ::ec::LoginResponse* Response::mutable_login() {
  set_has_login();
  if (login_ == NULL) {
    login_ = new ::ec::LoginResponse;
  }
  // @@protoc_insertion_point(field_mutable:ec.Response.login)
  return login_;
}
inline ::ec::LoginResponse* Response::release_login() {
  clear_has_login();
  ::ec::LoginResponse* temp = login_;
  login_ = NULL;
  return temp;
}
inline void Response::set_allocated_login(::ec::LoginResponse* login) {
  delete login_;
  login_ = login;
  if (login) {
    set_has_login();
  } else {
    clear_has_login();
  }
  // @@protoc_insertion_point(field_set_allocated:ec.Response.login)
}

// -------------------------------------------------------------------

// MQAAMessage

// required .ec.MSG msg_type = 1;
inline bool MQAAMessage::has_msg_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MQAAMessage::set_has_msg_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MQAAMessage::clear_has_msg_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MQAAMessage::clear_msg_type() {
  msg_type_ = 10001;
  clear_has_msg_type();
}
inline ::ec::MSG MQAAMessage::msg_type() const {
  // @@protoc_insertion_point(field_get:ec.MQAAMessage.msg_type)
  return static_cast< ::ec::MSG >(msg_type_);
}
inline void MQAAMessage::set_msg_type(::ec::MSG value) {
  assert(::ec::MSG_IsValid(value));
  set_has_msg_type();
  msg_type_ = value;
  // @@protoc_insertion_point(field_set:ec.MQAAMessage.msg_type)
}

// required fixed32 sequence = 2;
inline bool MQAAMessage::has_sequence() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MQAAMessage::set_has_sequence() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MQAAMessage::clear_has_sequence() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MQAAMessage::clear_sequence() {
  sequence_ = 0u;
  clear_has_sequence();
}
inline ::google::protobuf::uint32 MQAAMessage::sequence() const {
  // @@protoc_insertion_point(field_get:ec.MQAAMessage.sequence)
  return sequence_;
}
inline void MQAAMessage::set_sequence(::google::protobuf::uint32 value) {
  set_has_sequence();
  sequence_ = value;
  // @@protoc_insertion_point(field_set:ec.MQAAMessage.sequence)
}

// optional fixed32 session_id = 3;
inline bool MQAAMessage::has_session_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MQAAMessage::set_has_session_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MQAAMessage::clear_has_session_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MQAAMessage::clear_session_id() {
  session_id_ = 0u;
  clear_has_session_id();
}
inline ::google::protobuf::uint32 MQAAMessage::session_id() const {
  // @@protoc_insertion_point(field_get:ec.MQAAMessage.session_id)
  return session_id_;
}
inline void MQAAMessage::set_session_id(::google::protobuf::uint32 value) {
  set_has_session_id();
  session_id_ = value;
  // @@protoc_insertion_point(field_set:ec.MQAAMessage.session_id)
}

// optional .ec.Request request = 4;
inline bool MQAAMessage::has_request() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MQAAMessage::set_has_request() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MQAAMessage::clear_has_request() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MQAAMessage::clear_request() {
  if (request_ != NULL) request_->::ec::Request::Clear();
  clear_has_request();
}
inline const ::ec::Request& MQAAMessage::request() const {
  // @@protoc_insertion_point(field_get:ec.MQAAMessage.request)
  return request_ != NULL ? *request_ : *default_instance_->request_;
}
inline ::ec::Request* MQAAMessage::mutable_request() {
  set_has_request();
  if (request_ == NULL) {
    request_ = new ::ec::Request;
  }
  // @@protoc_insertion_point(field_mutable:ec.MQAAMessage.request)
  return request_;
}
inline ::ec::Request* MQAAMessage::release_request() {
  clear_has_request();
  ::ec::Request* temp = request_;
  request_ = NULL;
  return temp;
}
inline void MQAAMessage::set_allocated_request(::ec::Request* request) {
  delete request_;
  request_ = request;
  if (request) {
    set_has_request();
  } else {
    clear_has_request();
  }
  // @@protoc_insertion_point(field_set_allocated:ec.MQAAMessage.request)
}

// optional .ec.Response response = 5;
inline bool MQAAMessage::has_response() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MQAAMessage::set_has_response() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MQAAMessage::clear_has_response() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MQAAMessage::clear_response() {
  if (response_ != NULL) response_->::ec::Response::Clear();
  clear_has_response();
}
inline const ::ec::Response& MQAAMessage::response() const {
  // @@protoc_insertion_point(field_get:ec.MQAAMessage.response)
  return response_ != NULL ? *response_ : *default_instance_->response_;
}
inline ::ec::Response* MQAAMessage::mutable_response() {
  set_has_response();
  if (response_ == NULL) {
    response_ = new ::ec::Response;
  }
  // @@protoc_insertion_point(field_mutable:ec.MQAAMessage.response)
  return response_;
}
inline ::ec::Response* MQAAMessage::release_response() {
  clear_has_response();
  ::ec::Response* temp = response_;
  response_ = NULL;
  return temp;
}
inline void MQAAMessage::set_allocated_response(::ec::Response* response) {
  delete response_;
  response_ = response;
  if (response) {
    set_has_response();
  } else {
    clear_has_response();
  }
  // @@protoc_insertion_point(field_set_allocated:ec.MQAAMessage.response)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace ec

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::ec::MSG> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ec::MSG>() {
  return ::ec::MSG_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_MQAA_2eproto__INCLUDED
