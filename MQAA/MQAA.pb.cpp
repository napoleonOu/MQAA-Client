// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MQAA.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ec/MQAA.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ec {

namespace {

const ::google::protobuf::Descriptor* LoginRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LoginRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* LoginResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LoginResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* ZhuTiCanShu_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ZhuTiCanShu_reflection_ = NULL;
const ::google::protobuf::Descriptor* ZhuTiCanShuResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ZhuTiCanShuResponse_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_MQAA_2eproto() {
  protobuf_AddDesc_MQAA_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "MQAA.proto");
  GOOGLE_CHECK(file != NULL);
  LoginRequest_descriptor_ = file->message_type(0);
  static const int LoginRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRequest, username_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRequest, password_),
  };
  LoginRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LoginRequest_descriptor_,
      LoginRequest::default_instance_,
      LoginRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRequest, _has_bits_[0]),
      -1,
      -1,
      sizeof(LoginRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRequest, _internal_metadata_),
      -1);
  LoginResponse_descriptor_ = file->message_type(1);
  static const int LoginResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginResponse, ttl_),
  };
  LoginResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LoginResponse_descriptor_,
      LoginResponse::default_instance_,
      LoginResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginResponse, _has_bits_[0]),
      -1,
      -1,
      sizeof(LoginResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginResponse, _internal_metadata_),
      -1);
  ZhuTiCanShu_descriptor_ = file->message_type(2);
  static const int ZhuTiCanShu_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZhuTiCanShu, opt_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZhuTiCanShu, doukou_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZhuTiCanShu, jiegouxingshi_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZhuTiCanShu, tanshu_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZhuTiCanShu, langxingshi_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZhuTiCanShu, jianshu_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZhuTiCanShu, zuo3miankuo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZhuTiCanShu, zuo2miankuo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZhuTiCanShu, zuo1miankuo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZhuTiCanShu, mingjianmiankuo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZhuTiCanShu, you1miankuo_),
  };
  ZhuTiCanShu_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ZhuTiCanShu_descriptor_,
      ZhuTiCanShu::default_instance_,
      ZhuTiCanShu_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZhuTiCanShu, _has_bits_[0]),
      -1,
      -1,
      sizeof(ZhuTiCanShu),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZhuTiCanShu, _internal_metadata_),
      -1);
  ZhuTiCanShuResponse_descriptor_ = file->message_type(3);
  static const int ZhuTiCanShuResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZhuTiCanShuResponse, ok_),
  };
  ZhuTiCanShuResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ZhuTiCanShuResponse_descriptor_,
      ZhuTiCanShuResponse::default_instance_,
      ZhuTiCanShuResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZhuTiCanShuResponse, _has_bits_[0]),
      -1,
      -1,
      sizeof(ZhuTiCanShuResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZhuTiCanShuResponse, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_MQAA_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LoginRequest_descriptor_, &LoginRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LoginResponse_descriptor_, &LoginResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ZhuTiCanShu_descriptor_, &ZhuTiCanShu::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ZhuTiCanShuResponse_descriptor_, &ZhuTiCanShuResponse::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_MQAA_2eproto() {
  delete LoginRequest::default_instance_;
  delete LoginRequest_reflection_;
  delete LoginResponse::default_instance_;
  delete LoginResponse_reflection_;
  delete ZhuTiCanShu::default_instance_;
  delete ZhuTiCanShu_reflection_;
  delete ZhuTiCanShuResponse::default_instance_;
  delete ZhuTiCanShuResponse_reflection_;
}

void protobuf_AddDesc_MQAA_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\nMQAA.proto\022\002ec\"2\n\014LoginRequest\022\020\n\010user"
    "name\030\001 \002(\014\022\020\n\010password\030\002 \001(\t\"\034\n\rLoginRes"
    "ponse\022\013\n\003ttl\030\001 \002(\007\"\344\001\n\013ZhuTiCanShu\022\013\n\003op"
    "t\030\001 \002(\t\022\016\n\006doukou\030\002 \002(\002\022\025\n\rjiegouxingshi"
    "\030\003 \001(\t\022\016\n\006tanshu\030\004 \001(\007\022\023\n\013langxingshi\030\005 "
    "\001(\t\022\017\n\007jianshu\030\006 \001(\007\022\023\n\013zuo3miankuo\030\007 \002("
    "\002\022\023\n\013zuo2miankuo\030\010 \002(\002\022\023\n\013zuo1miankuo\030\t "
    "\002(\002\022\027\n\017mingjianmiankuo\030\n \002(\002\022\023\n\013you1mian"
    "kuo\030\013 \002(\002\"!\n\023ZhuTiCanShuResponse\022\n\n\002ok\030\001"
    " \002(\t", 364);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "MQAA.proto", &protobuf_RegisterTypes);
  LoginRequest::default_instance_ = new LoginRequest();
  LoginResponse::default_instance_ = new LoginResponse();
  ZhuTiCanShu::default_instance_ = new ZhuTiCanShu();
  ZhuTiCanShuResponse::default_instance_ = new ZhuTiCanShuResponse();
  LoginRequest::default_instance_->InitAsDefaultInstance();
  LoginResponse::default_instance_->InitAsDefaultInstance();
  ZhuTiCanShu::default_instance_->InitAsDefaultInstance();
  ZhuTiCanShuResponse::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_MQAA_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_MQAA_2eproto {
  StaticDescriptorInitializer_MQAA_2eproto() {
    protobuf_AddDesc_MQAA_2eproto();
  }
} static_descriptor_initializer_MQAA_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#ifndef _MSC_VER
const int LoginRequest::kUsernameFieldNumber;
const int LoginRequest::kPasswordFieldNumber;
#endif  // !_MSC_VER

LoginRequest::LoginRequest()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ec.LoginRequest)
}

void LoginRequest::InitAsDefaultInstance() {
}

LoginRequest::LoginRequest(const LoginRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ec.LoginRequest)
}

void LoginRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LoginRequest::~LoginRequest() {
  // @@protoc_insertion_point(destructor:ec.LoginRequest)
  SharedDtor();
}

void LoginRequest::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void LoginRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoginRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LoginRequest_descriptor_;
}

const LoginRequest& LoginRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MQAA_2eproto();
  return *default_instance_;
}

LoginRequest* LoginRequest::default_instance_ = NULL;

LoginRequest* LoginRequest::New(::google::protobuf::Arena* arena) const {
  LoginRequest* n = new LoginRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoginRequest::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_username()) {
      username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_password()) {
      password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool LoginRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ec.LoginRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes username = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_username()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_password;
        break;
      }

      // optional string password = 2;
      case 2: {
        if (tag == 18) {
         parse_password:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ec.LoginRequest.password");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ec.LoginRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ec.LoginRequest)
  return false;
#undef DO_
}

void LoginRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ec.LoginRequest)
  // required bytes username = 1;
  if (has_username()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->username(), output);
  }

  // optional string password = 2;
  if (has_password()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ec.LoginRequest.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ec.LoginRequest)
}

::google::protobuf::uint8* LoginRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ec.LoginRequest)
  // required bytes username = 1;
  if (has_username()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->username(), target);
  }

  // optional string password = 2;
  if (has_password()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ec.LoginRequest.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ec.LoginRequest)
  return target;
}

int LoginRequest::ByteSize() const {
  int total_size = 0;

  // required bytes username = 1;
  if (has_username()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->username());
  }
  // optional string password = 2;
  if (has_password()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoginRequest::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const LoginRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const LoginRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void LoginRequest::MergeFrom(const LoginRequest& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_username()) {
      set_has_username();
      username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
    }
    if (from.has_password()) {
      set_has_password();
      password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void LoginRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginRequest::CopyFrom(const LoginRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void LoginRequest::Swap(LoginRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginRequest::InternalSwap(LoginRequest* other) {
  username_.Swap(&other->username_);
  password_.Swap(&other->password_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LoginRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LoginRequest_descriptor_;
  metadata.reflection = LoginRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LoginRequest

// required bytes username = 1;
 bool LoginRequest::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void LoginRequest::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
 void LoginRequest::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
 void LoginRequest::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
 const ::std::string& LoginRequest::username() const {
  // @@protoc_insertion_point(field_get:ec.LoginRequest.username)
  return username_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LoginRequest::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ec.LoginRequest.username)
}
 void LoginRequest::set_username(const char* value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ec.LoginRequest.username)
}
 void LoginRequest::set_username(const void* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ec.LoginRequest.username)
}
 ::std::string* LoginRequest::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:ec.LoginRequest.username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* LoginRequest::release_username() {
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LoginRequest::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:ec.LoginRequest.username)
}

// optional string password = 2;
 bool LoginRequest::has_password() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void LoginRequest::set_has_password() {
  _has_bits_[0] |= 0x00000002u;
}
 void LoginRequest::clear_has_password() {
  _has_bits_[0] &= ~0x00000002u;
}
 void LoginRequest::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_password();
}
 const ::std::string& LoginRequest::password() const {
  // @@protoc_insertion_point(field_get:ec.LoginRequest.password)
  return password_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LoginRequest::set_password(const ::std::string& value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ec.LoginRequest.password)
}
 void LoginRequest::set_password(const char* value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ec.LoginRequest.password)
}
 void LoginRequest::set_password(const char* value, size_t size) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ec.LoginRequest.password)
}
 ::std::string* LoginRequest::mutable_password() {
  set_has_password();
  // @@protoc_insertion_point(field_mutable:ec.LoginRequest.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* LoginRequest::release_password() {
  clear_has_password();
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LoginRequest::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    set_has_password();
  } else {
    clear_has_password();
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:ec.LoginRequest.password)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int LoginResponse::kTtlFieldNumber;
#endif  // !_MSC_VER

LoginResponse::LoginResponse()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ec.LoginResponse)
}

void LoginResponse::InitAsDefaultInstance() {
}

LoginResponse::LoginResponse(const LoginResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ec.LoginResponse)
}

void LoginResponse::SharedCtor() {
  _cached_size_ = 0;
  ttl_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LoginResponse::~LoginResponse() {
  // @@protoc_insertion_point(destructor:ec.LoginResponse)
  SharedDtor();
}

void LoginResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void LoginResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoginResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LoginResponse_descriptor_;
}

const LoginResponse& LoginResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MQAA_2eproto();
  return *default_instance_;
}

LoginResponse* LoginResponse::default_instance_ = NULL;

LoginResponse* LoginResponse::New(::google::protobuf::Arena* arena) const {
  LoginResponse* n = new LoginResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoginResponse::Clear() {
  ttl_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool LoginResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ec.LoginResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required fixed32 ttl = 1;
      case 1: {
        if (tag == 13) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &ttl_)));
          set_has_ttl();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ec.LoginResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ec.LoginResponse)
  return false;
#undef DO_
}

void LoginResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ec.LoginResponse)
  // required fixed32 ttl = 1;
  if (has_ttl()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(1, this->ttl(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ec.LoginResponse)
}

::google::protobuf::uint8* LoginResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ec.LoginResponse)
  // required fixed32 ttl = 1;
  if (has_ttl()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(1, this->ttl(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ec.LoginResponse)
  return target;
}

int LoginResponse::ByteSize() const {
  int total_size = 0;

  // required fixed32 ttl = 1;
  if (has_ttl()) {
    total_size += 1 + 4;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoginResponse::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const LoginResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const LoginResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void LoginResponse::MergeFrom(const LoginResponse& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ttl()) {
      set_ttl(from.ttl());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void LoginResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginResponse::CopyFrom(const LoginResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void LoginResponse::Swap(LoginResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginResponse::InternalSwap(LoginResponse* other) {
  std::swap(ttl_, other->ttl_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LoginResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LoginResponse_descriptor_;
  metadata.reflection = LoginResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LoginResponse

// required fixed32 ttl = 1;
 bool LoginResponse::has_ttl() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void LoginResponse::set_has_ttl() {
  _has_bits_[0] |= 0x00000001u;
}
 void LoginResponse::clear_has_ttl() {
  _has_bits_[0] &= ~0x00000001u;
}
 void LoginResponse::clear_ttl() {
  ttl_ = 0u;
  clear_has_ttl();
}
 ::google::protobuf::uint32 LoginResponse::ttl() const {
  // @@protoc_insertion_point(field_get:ec.LoginResponse.ttl)
  return ttl_;
}
 void LoginResponse::set_ttl(::google::protobuf::uint32 value) {
  set_has_ttl();
  ttl_ = value;
  // @@protoc_insertion_point(field_set:ec.LoginResponse.ttl)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int ZhuTiCanShu::kOptFieldNumber;
const int ZhuTiCanShu::kDoukouFieldNumber;
const int ZhuTiCanShu::kJiegouxingshiFieldNumber;
const int ZhuTiCanShu::kTanshuFieldNumber;
const int ZhuTiCanShu::kLangxingshiFieldNumber;
const int ZhuTiCanShu::kJianshuFieldNumber;
const int ZhuTiCanShu::kZuo3MiankuoFieldNumber;
const int ZhuTiCanShu::kZuo2MiankuoFieldNumber;
const int ZhuTiCanShu::kZuo1MiankuoFieldNumber;
const int ZhuTiCanShu::kMingjianmiankuoFieldNumber;
const int ZhuTiCanShu::kYou1MiankuoFieldNumber;
#endif  // !_MSC_VER

ZhuTiCanShu::ZhuTiCanShu()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ec.ZhuTiCanShu)
}

void ZhuTiCanShu::InitAsDefaultInstance() {
}

ZhuTiCanShu::ZhuTiCanShu(const ZhuTiCanShu& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ec.ZhuTiCanShu)
}

void ZhuTiCanShu::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  opt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  doukou_ = 0;
  jiegouxingshi_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tanshu_ = 0u;
  langxingshi_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  jianshu_ = 0u;
  zuo3miankuo_ = 0;
  zuo2miankuo_ = 0;
  zuo1miankuo_ = 0;
  mingjianmiankuo_ = 0;
  you1miankuo_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ZhuTiCanShu::~ZhuTiCanShu() {
  // @@protoc_insertion_point(destructor:ec.ZhuTiCanShu)
  SharedDtor();
}

void ZhuTiCanShu::SharedDtor() {
  opt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  jiegouxingshi_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  langxingshi_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void ZhuTiCanShu::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ZhuTiCanShu::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ZhuTiCanShu_descriptor_;
}

const ZhuTiCanShu& ZhuTiCanShu::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MQAA_2eproto();
  return *default_instance_;
}

ZhuTiCanShu* ZhuTiCanShu::default_instance_ = NULL;

ZhuTiCanShu* ZhuTiCanShu::New(::google::protobuf::Arena* arena) const {
  ZhuTiCanShu* n = new ZhuTiCanShu;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ZhuTiCanShu::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ZhuTiCanShu*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(doukou_, tanshu_);
    ZR_(jianshu_, zuo2miankuo_);
    if (has_opt()) {
      opt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_jiegouxingshi()) {
      jiegouxingshi_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_langxingshi()) {
      langxingshi_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ZR_(zuo1miankuo_, you1miankuo_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ZhuTiCanShu::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ec.ZhuTiCanShu)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string opt = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_opt()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->opt().data(), this->opt().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ec.ZhuTiCanShu.opt");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(21)) goto parse_doukou;
        break;
      }

      // required float doukou = 2;
      case 2: {
        if (tag == 21) {
         parse_doukou:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &doukou_)));
          set_has_doukou();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_jiegouxingshi;
        break;
      }

      // optional string jiegouxingshi = 3;
      case 3: {
        if (tag == 26) {
         parse_jiegouxingshi:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_jiegouxingshi()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->jiegouxingshi().data(), this->jiegouxingshi().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ec.ZhuTiCanShu.jiegouxingshi");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(37)) goto parse_tanshu;
        break;
      }

      // optional fixed32 tanshu = 4;
      case 4: {
        if (tag == 37) {
         parse_tanshu:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &tanshu_)));
          set_has_tanshu();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_langxingshi;
        break;
      }

      // optional string langxingshi = 5;
      case 5: {
        if (tag == 42) {
         parse_langxingshi:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_langxingshi()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->langxingshi().data(), this->langxingshi().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ec.ZhuTiCanShu.langxingshi");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(53)) goto parse_jianshu;
        break;
      }

      // optional fixed32 jianshu = 6;
      case 6: {
        if (tag == 53) {
         parse_jianshu:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &jianshu_)));
          set_has_jianshu();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(61)) goto parse_zuo3miankuo;
        break;
      }

      // required float zuo3miankuo = 7;
      case 7: {
        if (tag == 61) {
         parse_zuo3miankuo:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &zuo3miankuo_)));
          set_has_zuo3miankuo();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(69)) goto parse_zuo2miankuo;
        break;
      }

      // required float zuo2miankuo = 8;
      case 8: {
        if (tag == 69) {
         parse_zuo2miankuo:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &zuo2miankuo_)));
          set_has_zuo2miankuo();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(77)) goto parse_zuo1miankuo;
        break;
      }

      // required float zuo1miankuo = 9;
      case 9: {
        if (tag == 77) {
         parse_zuo1miankuo:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &zuo1miankuo_)));
          set_has_zuo1miankuo();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(85)) goto parse_mingjianmiankuo;
        break;
      }

      // required float mingjianmiankuo = 10;
      case 10: {
        if (tag == 85) {
         parse_mingjianmiankuo:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &mingjianmiankuo_)));
          set_has_mingjianmiankuo();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(93)) goto parse_you1miankuo;
        break;
      }

      // required float you1miankuo = 11;
      case 11: {
        if (tag == 93) {
         parse_you1miankuo:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &you1miankuo_)));
          set_has_you1miankuo();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ec.ZhuTiCanShu)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ec.ZhuTiCanShu)
  return false;
#undef DO_
}

void ZhuTiCanShu::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ec.ZhuTiCanShu)
  // required string opt = 1;
  if (has_opt()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->opt().data(), this->opt().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ec.ZhuTiCanShu.opt");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->opt(), output);
  }

  // required float doukou = 2;
  if (has_doukou()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->doukou(), output);
  }

  // optional string jiegouxingshi = 3;
  if (has_jiegouxingshi()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->jiegouxingshi().data(), this->jiegouxingshi().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ec.ZhuTiCanShu.jiegouxingshi");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->jiegouxingshi(), output);
  }

  // optional fixed32 tanshu = 4;
  if (has_tanshu()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(4, this->tanshu(), output);
  }

  // optional string langxingshi = 5;
  if (has_langxingshi()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->langxingshi().data(), this->langxingshi().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ec.ZhuTiCanShu.langxingshi");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->langxingshi(), output);
  }

  // optional fixed32 jianshu = 6;
  if (has_jianshu()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(6, this->jianshu(), output);
  }

  // required float zuo3miankuo = 7;
  if (has_zuo3miankuo()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->zuo3miankuo(), output);
  }

  // required float zuo2miankuo = 8;
  if (has_zuo2miankuo()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->zuo2miankuo(), output);
  }

  // required float zuo1miankuo = 9;
  if (has_zuo1miankuo()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(9, this->zuo1miankuo(), output);
  }

  // required float mingjianmiankuo = 10;
  if (has_mingjianmiankuo()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(10, this->mingjianmiankuo(), output);
  }

  // required float you1miankuo = 11;
  if (has_you1miankuo()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(11, this->you1miankuo(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ec.ZhuTiCanShu)
}

::google::protobuf::uint8* ZhuTiCanShu::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ec.ZhuTiCanShu)
  // required string opt = 1;
  if (has_opt()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->opt().data(), this->opt().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ec.ZhuTiCanShu.opt");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->opt(), target);
  }

  // required float doukou = 2;
  if (has_doukou()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->doukou(), target);
  }

  // optional string jiegouxingshi = 3;
  if (has_jiegouxingshi()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->jiegouxingshi().data(), this->jiegouxingshi().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ec.ZhuTiCanShu.jiegouxingshi");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->jiegouxingshi(), target);
  }

  // optional fixed32 tanshu = 4;
  if (has_tanshu()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(4, this->tanshu(), target);
  }

  // optional string langxingshi = 5;
  if (has_langxingshi()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->langxingshi().data(), this->langxingshi().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ec.ZhuTiCanShu.langxingshi");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->langxingshi(), target);
  }

  // optional fixed32 jianshu = 6;
  if (has_jianshu()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(6, this->jianshu(), target);
  }

  // required float zuo3miankuo = 7;
  if (has_zuo3miankuo()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->zuo3miankuo(), target);
  }

  // required float zuo2miankuo = 8;
  if (has_zuo2miankuo()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->zuo2miankuo(), target);
  }

  // required float zuo1miankuo = 9;
  if (has_zuo1miankuo()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(9, this->zuo1miankuo(), target);
  }

  // required float mingjianmiankuo = 10;
  if (has_mingjianmiankuo()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(10, this->mingjianmiankuo(), target);
  }

  // required float you1miankuo = 11;
  if (has_you1miankuo()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(11, this->you1miankuo(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ec.ZhuTiCanShu)
  return target;
}

int ZhuTiCanShu::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_opt()) {
    // required string opt = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->opt());
  }

  if (has_doukou()) {
    // required float doukou = 2;
    total_size += 1 + 4;
  }

  if (has_zuo3miankuo()) {
    // required float zuo3miankuo = 7;
    total_size += 1 + 4;
  }

  if (has_zuo2miankuo()) {
    // required float zuo2miankuo = 8;
    total_size += 1 + 4;
  }

  if (has_zuo1miankuo()) {
    // required float zuo1miankuo = 9;
    total_size += 1 + 4;
  }

  if (has_mingjianmiankuo()) {
    // required float mingjianmiankuo = 10;
    total_size += 1 + 4;
  }

  if (has_you1miankuo()) {
    // required float you1miankuo = 11;
    total_size += 1 + 4;
  }

  return total_size;
}
int ZhuTiCanShu::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x000007c3) ^ 0x000007c3) == 0) {  // All required fields are present.
    // required string opt = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->opt());

    // required float doukou = 2;
    total_size += 1 + 4;

    // required float zuo3miankuo = 7;
    total_size += 1 + 4;

    // required float zuo2miankuo = 8;
    total_size += 1 + 4;

    // required float zuo1miankuo = 9;
    total_size += 1 + 4;

    // required float mingjianmiankuo = 10;
    total_size += 1 + 4;

    // required float you1miankuo = 11;
    total_size += 1 + 4;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[2 / 32] & 60) {
    // optional string jiegouxingshi = 3;
    if (has_jiegouxingshi()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->jiegouxingshi());
    }

    // optional fixed32 tanshu = 4;
    if (has_tanshu()) {
      total_size += 1 + 4;
    }

    // optional string langxingshi = 5;
    if (has_langxingshi()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->langxingshi());
    }

    // optional fixed32 jianshu = 6;
    if (has_jianshu()) {
      total_size += 1 + 4;
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ZhuTiCanShu::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ZhuTiCanShu* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ZhuTiCanShu*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ZhuTiCanShu::MergeFrom(const ZhuTiCanShu& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_opt()) {
      set_has_opt();
      opt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.opt_);
    }
    if (from.has_doukou()) {
      set_doukou(from.doukou());
    }
    if (from.has_jiegouxingshi()) {
      set_has_jiegouxingshi();
      jiegouxingshi_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.jiegouxingshi_);
    }
    if (from.has_tanshu()) {
      set_tanshu(from.tanshu());
    }
    if (from.has_langxingshi()) {
      set_has_langxingshi();
      langxingshi_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.langxingshi_);
    }
    if (from.has_jianshu()) {
      set_jianshu(from.jianshu());
    }
    if (from.has_zuo3miankuo()) {
      set_zuo3miankuo(from.zuo3miankuo());
    }
    if (from.has_zuo2miankuo()) {
      set_zuo2miankuo(from.zuo2miankuo());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_zuo1miankuo()) {
      set_zuo1miankuo(from.zuo1miankuo());
    }
    if (from.has_mingjianmiankuo()) {
      set_mingjianmiankuo(from.mingjianmiankuo());
    }
    if (from.has_you1miankuo()) {
      set_you1miankuo(from.you1miankuo());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ZhuTiCanShu::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ZhuTiCanShu::CopyFrom(const ZhuTiCanShu& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ZhuTiCanShu::IsInitialized() const {
  if ((_has_bits_[0] & 0x000007c3) != 0x000007c3) return false;

  return true;
}

void ZhuTiCanShu::Swap(ZhuTiCanShu* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ZhuTiCanShu::InternalSwap(ZhuTiCanShu* other) {
  opt_.Swap(&other->opt_);
  std::swap(doukou_, other->doukou_);
  jiegouxingshi_.Swap(&other->jiegouxingshi_);
  std::swap(tanshu_, other->tanshu_);
  langxingshi_.Swap(&other->langxingshi_);
  std::swap(jianshu_, other->jianshu_);
  std::swap(zuo3miankuo_, other->zuo3miankuo_);
  std::swap(zuo2miankuo_, other->zuo2miankuo_);
  std::swap(zuo1miankuo_, other->zuo1miankuo_);
  std::swap(mingjianmiankuo_, other->mingjianmiankuo_);
  std::swap(you1miankuo_, other->you1miankuo_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ZhuTiCanShu::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ZhuTiCanShu_descriptor_;
  metadata.reflection = ZhuTiCanShu_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ZhuTiCanShu

// required string opt = 1;
 bool ZhuTiCanShu::has_opt() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void ZhuTiCanShu::set_has_opt() {
  _has_bits_[0] |= 0x00000001u;
}
 void ZhuTiCanShu::clear_has_opt() {
  _has_bits_[0] &= ~0x00000001u;
}
 void ZhuTiCanShu::clear_opt() {
  opt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_opt();
}
 const ::std::string& ZhuTiCanShu::opt() const {
  // @@protoc_insertion_point(field_get:ec.ZhuTiCanShu.opt)
  return opt_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ZhuTiCanShu::set_opt(const ::std::string& value) {
  set_has_opt();
  opt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ec.ZhuTiCanShu.opt)
}
 void ZhuTiCanShu::set_opt(const char* value) {
  set_has_opt();
  opt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ec.ZhuTiCanShu.opt)
}
 void ZhuTiCanShu::set_opt(const char* value, size_t size) {
  set_has_opt();
  opt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ec.ZhuTiCanShu.opt)
}
 ::std::string* ZhuTiCanShu::mutable_opt() {
  set_has_opt();
  // @@protoc_insertion_point(field_mutable:ec.ZhuTiCanShu.opt)
  return opt_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ZhuTiCanShu::release_opt() {
  clear_has_opt();
  return opt_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ZhuTiCanShu::set_allocated_opt(::std::string* opt) {
  if (opt != NULL) {
    set_has_opt();
  } else {
    clear_has_opt();
  }
  opt_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), opt);
  // @@protoc_insertion_point(field_set_allocated:ec.ZhuTiCanShu.opt)
}

// required float doukou = 2;
 bool ZhuTiCanShu::has_doukou() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void ZhuTiCanShu::set_has_doukou() {
  _has_bits_[0] |= 0x00000002u;
}
 void ZhuTiCanShu::clear_has_doukou() {
  _has_bits_[0] &= ~0x00000002u;
}
 void ZhuTiCanShu::clear_doukou() {
  doukou_ = 0;
  clear_has_doukou();
}
 float ZhuTiCanShu::doukou() const {
  // @@protoc_insertion_point(field_get:ec.ZhuTiCanShu.doukou)
  return doukou_;
}
 void ZhuTiCanShu::set_doukou(float value) {
  set_has_doukou();
  doukou_ = value;
  // @@protoc_insertion_point(field_set:ec.ZhuTiCanShu.doukou)
}

// optional string jiegouxingshi = 3;
 bool ZhuTiCanShu::has_jiegouxingshi() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
 void ZhuTiCanShu::set_has_jiegouxingshi() {
  _has_bits_[0] |= 0x00000004u;
}
 void ZhuTiCanShu::clear_has_jiegouxingshi() {
  _has_bits_[0] &= ~0x00000004u;
}
 void ZhuTiCanShu::clear_jiegouxingshi() {
  jiegouxingshi_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_jiegouxingshi();
}
 const ::std::string& ZhuTiCanShu::jiegouxingshi() const {
  // @@protoc_insertion_point(field_get:ec.ZhuTiCanShu.jiegouxingshi)
  return jiegouxingshi_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ZhuTiCanShu::set_jiegouxingshi(const ::std::string& value) {
  set_has_jiegouxingshi();
  jiegouxingshi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ec.ZhuTiCanShu.jiegouxingshi)
}
 void ZhuTiCanShu::set_jiegouxingshi(const char* value) {
  set_has_jiegouxingshi();
  jiegouxingshi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ec.ZhuTiCanShu.jiegouxingshi)
}
 void ZhuTiCanShu::set_jiegouxingshi(const char* value, size_t size) {
  set_has_jiegouxingshi();
  jiegouxingshi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ec.ZhuTiCanShu.jiegouxingshi)
}
 ::std::string* ZhuTiCanShu::mutable_jiegouxingshi() {
  set_has_jiegouxingshi();
  // @@protoc_insertion_point(field_mutable:ec.ZhuTiCanShu.jiegouxingshi)
  return jiegouxingshi_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ZhuTiCanShu::release_jiegouxingshi() {
  clear_has_jiegouxingshi();
  return jiegouxingshi_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ZhuTiCanShu::set_allocated_jiegouxingshi(::std::string* jiegouxingshi) {
  if (jiegouxingshi != NULL) {
    set_has_jiegouxingshi();
  } else {
    clear_has_jiegouxingshi();
  }
  jiegouxingshi_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), jiegouxingshi);
  // @@protoc_insertion_point(field_set_allocated:ec.ZhuTiCanShu.jiegouxingshi)
}

// optional fixed32 tanshu = 4;
 bool ZhuTiCanShu::has_tanshu() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
 void ZhuTiCanShu::set_has_tanshu() {
  _has_bits_[0] |= 0x00000008u;
}
 void ZhuTiCanShu::clear_has_tanshu() {
  _has_bits_[0] &= ~0x00000008u;
}
 void ZhuTiCanShu::clear_tanshu() {
  tanshu_ = 0u;
  clear_has_tanshu();
}
 ::google::protobuf::uint32 ZhuTiCanShu::tanshu() const {
  // @@protoc_insertion_point(field_get:ec.ZhuTiCanShu.tanshu)
  return tanshu_;
}
 void ZhuTiCanShu::set_tanshu(::google::protobuf::uint32 value) {
  set_has_tanshu();
  tanshu_ = value;
  // @@protoc_insertion_point(field_set:ec.ZhuTiCanShu.tanshu)
}

// optional string langxingshi = 5;
 bool ZhuTiCanShu::has_langxingshi() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
 void ZhuTiCanShu::set_has_langxingshi() {
  _has_bits_[0] |= 0x00000010u;
}
 void ZhuTiCanShu::clear_has_langxingshi() {
  _has_bits_[0] &= ~0x00000010u;
}
 void ZhuTiCanShu::clear_langxingshi() {
  langxingshi_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_langxingshi();
}
 const ::std::string& ZhuTiCanShu::langxingshi() const {
  // @@protoc_insertion_point(field_get:ec.ZhuTiCanShu.langxingshi)
  return langxingshi_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ZhuTiCanShu::set_langxingshi(const ::std::string& value) {
  set_has_langxingshi();
  langxingshi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ec.ZhuTiCanShu.langxingshi)
}
 void ZhuTiCanShu::set_langxingshi(const char* value) {
  set_has_langxingshi();
  langxingshi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ec.ZhuTiCanShu.langxingshi)
}
 void ZhuTiCanShu::set_langxingshi(const char* value, size_t size) {
  set_has_langxingshi();
  langxingshi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ec.ZhuTiCanShu.langxingshi)
}
 ::std::string* ZhuTiCanShu::mutable_langxingshi() {
  set_has_langxingshi();
  // @@protoc_insertion_point(field_mutable:ec.ZhuTiCanShu.langxingshi)
  return langxingshi_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ZhuTiCanShu::release_langxingshi() {
  clear_has_langxingshi();
  return langxingshi_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ZhuTiCanShu::set_allocated_langxingshi(::std::string* langxingshi) {
  if (langxingshi != NULL) {
    set_has_langxingshi();
  } else {
    clear_has_langxingshi();
  }
  langxingshi_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), langxingshi);
  // @@protoc_insertion_point(field_set_allocated:ec.ZhuTiCanShu.langxingshi)
}

// optional fixed32 jianshu = 6;
 bool ZhuTiCanShu::has_jianshu() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
 void ZhuTiCanShu::set_has_jianshu() {
  _has_bits_[0] |= 0x00000020u;
}
 void ZhuTiCanShu::clear_has_jianshu() {
  _has_bits_[0] &= ~0x00000020u;
}
 void ZhuTiCanShu::clear_jianshu() {
  jianshu_ = 0u;
  clear_has_jianshu();
}
 ::google::protobuf::uint32 ZhuTiCanShu::jianshu() const {
  // @@protoc_insertion_point(field_get:ec.ZhuTiCanShu.jianshu)
  return jianshu_;
}
 void ZhuTiCanShu::set_jianshu(::google::protobuf::uint32 value) {
  set_has_jianshu();
  jianshu_ = value;
  // @@protoc_insertion_point(field_set:ec.ZhuTiCanShu.jianshu)
}

// required float zuo3miankuo = 7;
 bool ZhuTiCanShu::has_zuo3miankuo() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
 void ZhuTiCanShu::set_has_zuo3miankuo() {
  _has_bits_[0] |= 0x00000040u;
}
 void ZhuTiCanShu::clear_has_zuo3miankuo() {
  _has_bits_[0] &= ~0x00000040u;
}
 void ZhuTiCanShu::clear_zuo3miankuo() {
  zuo3miankuo_ = 0;
  clear_has_zuo3miankuo();
}
 float ZhuTiCanShu::zuo3miankuo() const {
  // @@protoc_insertion_point(field_get:ec.ZhuTiCanShu.zuo3miankuo)
  return zuo3miankuo_;
}
 void ZhuTiCanShu::set_zuo3miankuo(float value) {
  set_has_zuo3miankuo();
  zuo3miankuo_ = value;
  // @@protoc_insertion_point(field_set:ec.ZhuTiCanShu.zuo3miankuo)
}

// required float zuo2miankuo = 8;
 bool ZhuTiCanShu::has_zuo2miankuo() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
 void ZhuTiCanShu::set_has_zuo2miankuo() {
  _has_bits_[0] |= 0x00000080u;
}
 void ZhuTiCanShu::clear_has_zuo2miankuo() {
  _has_bits_[0] &= ~0x00000080u;
}
 void ZhuTiCanShu::clear_zuo2miankuo() {
  zuo2miankuo_ = 0;
  clear_has_zuo2miankuo();
}
 float ZhuTiCanShu::zuo2miankuo() const {
  // @@protoc_insertion_point(field_get:ec.ZhuTiCanShu.zuo2miankuo)
  return zuo2miankuo_;
}
 void ZhuTiCanShu::set_zuo2miankuo(float value) {
  set_has_zuo2miankuo();
  zuo2miankuo_ = value;
  // @@protoc_insertion_point(field_set:ec.ZhuTiCanShu.zuo2miankuo)
}

// required float zuo1miankuo = 9;
 bool ZhuTiCanShu::has_zuo1miankuo() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
 void ZhuTiCanShu::set_has_zuo1miankuo() {
  _has_bits_[0] |= 0x00000100u;
}
 void ZhuTiCanShu::clear_has_zuo1miankuo() {
  _has_bits_[0] &= ~0x00000100u;
}
 void ZhuTiCanShu::clear_zuo1miankuo() {
  zuo1miankuo_ = 0;
  clear_has_zuo1miankuo();
}
 float ZhuTiCanShu::zuo1miankuo() const {
  // @@protoc_insertion_point(field_get:ec.ZhuTiCanShu.zuo1miankuo)
  return zuo1miankuo_;
}
 void ZhuTiCanShu::set_zuo1miankuo(float value) {
  set_has_zuo1miankuo();
  zuo1miankuo_ = value;
  // @@protoc_insertion_point(field_set:ec.ZhuTiCanShu.zuo1miankuo)
}

// required float mingjianmiankuo = 10;
 bool ZhuTiCanShu::has_mingjianmiankuo() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
 void ZhuTiCanShu::set_has_mingjianmiankuo() {
  _has_bits_[0] |= 0x00000200u;
}
 void ZhuTiCanShu::clear_has_mingjianmiankuo() {
  _has_bits_[0] &= ~0x00000200u;
}
 void ZhuTiCanShu::clear_mingjianmiankuo() {
  mingjianmiankuo_ = 0;
  clear_has_mingjianmiankuo();
}
 float ZhuTiCanShu::mingjianmiankuo() const {
  // @@protoc_insertion_point(field_get:ec.ZhuTiCanShu.mingjianmiankuo)
  return mingjianmiankuo_;
}
 void ZhuTiCanShu::set_mingjianmiankuo(float value) {
  set_has_mingjianmiankuo();
  mingjianmiankuo_ = value;
  // @@protoc_insertion_point(field_set:ec.ZhuTiCanShu.mingjianmiankuo)
}

// required float you1miankuo = 11;
 bool ZhuTiCanShu::has_you1miankuo() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
 void ZhuTiCanShu::set_has_you1miankuo() {
  _has_bits_[0] |= 0x00000400u;
}
 void ZhuTiCanShu::clear_has_you1miankuo() {
  _has_bits_[0] &= ~0x00000400u;
}
 void ZhuTiCanShu::clear_you1miankuo() {
  you1miankuo_ = 0;
  clear_has_you1miankuo();
}
 float ZhuTiCanShu::you1miankuo() const {
  // @@protoc_insertion_point(field_get:ec.ZhuTiCanShu.you1miankuo)
  return you1miankuo_;
}
 void ZhuTiCanShu::set_you1miankuo(float value) {
  set_has_you1miankuo();
  you1miankuo_ = value;
  // @@protoc_insertion_point(field_set:ec.ZhuTiCanShu.you1miankuo)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int ZhuTiCanShuResponse::kOkFieldNumber;
#endif  // !_MSC_VER

ZhuTiCanShuResponse::ZhuTiCanShuResponse()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ec.ZhuTiCanShuResponse)
}

void ZhuTiCanShuResponse::InitAsDefaultInstance() {
}

ZhuTiCanShuResponse::ZhuTiCanShuResponse(const ZhuTiCanShuResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ec.ZhuTiCanShuResponse)
}

void ZhuTiCanShuResponse::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  ok_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ZhuTiCanShuResponse::~ZhuTiCanShuResponse() {
  // @@protoc_insertion_point(destructor:ec.ZhuTiCanShuResponse)
  SharedDtor();
}

void ZhuTiCanShuResponse::SharedDtor() {
  ok_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void ZhuTiCanShuResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ZhuTiCanShuResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ZhuTiCanShuResponse_descriptor_;
}

const ZhuTiCanShuResponse& ZhuTiCanShuResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MQAA_2eproto();
  return *default_instance_;
}

ZhuTiCanShuResponse* ZhuTiCanShuResponse::default_instance_ = NULL;

ZhuTiCanShuResponse* ZhuTiCanShuResponse::New(::google::protobuf::Arena* arena) const {
  ZhuTiCanShuResponse* n = new ZhuTiCanShuResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ZhuTiCanShuResponse::Clear() {
  if (has_ok()) {
    ok_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ZhuTiCanShuResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ec.ZhuTiCanShuResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string ok = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ok()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->ok().data(), this->ok().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ec.ZhuTiCanShuResponse.ok");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ec.ZhuTiCanShuResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ec.ZhuTiCanShuResponse)
  return false;
#undef DO_
}

void ZhuTiCanShuResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ec.ZhuTiCanShuResponse)
  // required string ok = 1;
  if (has_ok()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ok().data(), this->ok().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ec.ZhuTiCanShuResponse.ok");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->ok(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ec.ZhuTiCanShuResponse)
}

::google::protobuf::uint8* ZhuTiCanShuResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ec.ZhuTiCanShuResponse)
  // required string ok = 1;
  if (has_ok()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ok().data(), this->ok().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ec.ZhuTiCanShuResponse.ok");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->ok(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ec.ZhuTiCanShuResponse)
  return target;
}

int ZhuTiCanShuResponse::ByteSize() const {
  int total_size = 0;

  // required string ok = 1;
  if (has_ok()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ok());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ZhuTiCanShuResponse::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ZhuTiCanShuResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ZhuTiCanShuResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ZhuTiCanShuResponse::MergeFrom(const ZhuTiCanShuResponse& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ok()) {
      set_has_ok();
      ok_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ok_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ZhuTiCanShuResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ZhuTiCanShuResponse::CopyFrom(const ZhuTiCanShuResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ZhuTiCanShuResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void ZhuTiCanShuResponse::Swap(ZhuTiCanShuResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ZhuTiCanShuResponse::InternalSwap(ZhuTiCanShuResponse* other) {
  ok_.Swap(&other->ok_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ZhuTiCanShuResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ZhuTiCanShuResponse_descriptor_;
  metadata.reflection = ZhuTiCanShuResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ZhuTiCanShuResponse

// required string ok = 1;
 bool ZhuTiCanShuResponse::has_ok() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void ZhuTiCanShuResponse::set_has_ok() {
  _has_bits_[0] |= 0x00000001u;
}
 void ZhuTiCanShuResponse::clear_has_ok() {
  _has_bits_[0] &= ~0x00000001u;
}
 void ZhuTiCanShuResponse::clear_ok() {
  ok_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ok();
}
 const ::std::string& ZhuTiCanShuResponse::ok() const {
  // @@protoc_insertion_point(field_get:ec.ZhuTiCanShuResponse.ok)
  return ok_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ZhuTiCanShuResponse::set_ok(const ::std::string& value) {
  set_has_ok();
  ok_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ec.ZhuTiCanShuResponse.ok)
}
 void ZhuTiCanShuResponse::set_ok(const char* value) {
  set_has_ok();
  ok_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ec.ZhuTiCanShuResponse.ok)
}
 void ZhuTiCanShuResponse::set_ok(const char* value, size_t size) {
  set_has_ok();
  ok_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ec.ZhuTiCanShuResponse.ok)
}
 ::std::string* ZhuTiCanShuResponse::mutable_ok() {
  set_has_ok();
  // @@protoc_insertion_point(field_mutable:ec.ZhuTiCanShuResponse.ok)
  return ok_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ZhuTiCanShuResponse::release_ok() {
  clear_has_ok();
  return ok_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ZhuTiCanShuResponse::set_allocated_ok(::std::string* ok) {
  if (ok != NULL) {
    set_has_ok();
  } else {
    clear_has_ok();
  }
  ok_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ok);
  // @@protoc_insertion_point(field_set_allocated:ec.ZhuTiCanShuResponse.ok)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace ec

// @@protoc_insertion_point(global_scope)
